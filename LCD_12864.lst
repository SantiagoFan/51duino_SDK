C51 COMPILER V9.00   LCD_12864                                                             09/06/2015 20:47:10 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD_12864
OBJECT MODULE PLACED IN LCD_12864.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE Source\LCD_12864.c BROWSE INCDIR(..\电机控制) DEBUG OBJECTEXTEND PRINT(.\LC
                    -D_12864.lst) OBJECT(LCD_12864.obj)

line level    source

   1          /*
   2          版权声明：
   3          深圳市小二极客科技（小R科技）旗下：WIFI机器人网・机器人创意工作室版权所有 www.wifi-robots.com
   4          您可以任意修改本程序，并应用于自行研发的智能小车机器人及其他电子产品上，但是禁止用于商业牟利。
   5          小R科技保留付诸法律起诉侵权的权利！2015-8-22
   6          By WIFI机器人网・机器人创意工作室
   7          */
   8          
   9          #include "LCD_12864.h"
  10          
  11          uint8 code AC_TABLE[] ={
  12                                             0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,// 第一行汉字位置      
  13                                             0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97, // 第二行汉字位置     
  14                                             0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,// 第三行汉字位置      
  15                                             0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f, // 第四行汉字位置     
  16                                                          };
  17          
  18          /*
  19          *********************************************************************************************************
  20          ** 函数名称 ：LCD_SendByte()
  21          ** 函数功能 ：串口发送一个字节
  22          ** 入口参数 ：Dbyte
  23          ** 出口参数 ：无
  24          powered by tianyalu
  25          *********************************************************************************************************
  26          */
  27          void LCD_SendByte(uint8 Dbyte)
  28          {
  29   1           uint8 i;
  30   1           for(i = 0;i < 8;i++)
  31   1           {
  32   2                      LCD_SCK = 0;
  33   2                      if ((Dbyte << i) & 0x80) 
  34   2                      {
  35   3                         LCD_SD = 1;//检查最高位
  36   3                      }
  37   2                      else 
  38   2                      {
  39   3                         LCD_SD = 0;
  40   3                      }
  41   2                      LCD_SCK = 1;
  42   2                      LCD_SCK = 0;
  43   2           }
  44   1      }
  45          /*
  46          *********************************************************************************************************
  47          ** 函数名称 ：Wricom()
  48          ** 函数功能 ：串口发送命令
  49          ** 入口参数 ：一个字节的命令Cbyte
  50          ** 出口参数 ：无
  51          powered by tianyalu
  52          *********************************************************************************************************
  53          */
  54          void Wricom( uint8 Cbyte )
C51 COMPILER V9.00   LCD_12864                                                             09/06/2015 20:47:10 PAGE 2   

  55          {
  56   1               LCD_CS = 1;
  57   1               Delay_Ms(5);                           //等待液晶处理数据
  58   1           LCD_SendByte(0xf8);            //11111,RW(0),RS(0),0
  59   1           LCD_SendByte(0xf0 & Cbyte);      //高四位
  60   1           LCD_SendByte(0xf0 & Cbyte << 4);   //低四位(先执行<<)
  61   1               LCD_CS = 0;
  62   1      }
  63          /*
  64          *********************************************************************************************************
  65          ** 函数名称 ：Wridat()
  66          ** 函数功能 ：串口发送数据
  67          ** 入口参数 ：一个字节的数据Dbyte
  68          ** 出口参数 ：无
  69          powered by tianyalu
  70          *********************************************************************************************************
  71          */
  72          void Wridat( uint8 Dbyte )
  73          {
  74   1               LCD_CS = 1;
  75   1               Delay_Ms(5);                           //等待液晶处理数据
  76   1           LCD_SendByte(0xfa);            //11111,RW(0),RS(1),0
  77   1           LCD_SendByte(0xf0 & Dbyte);      //高四位
  78   1           LCD_SendByte(0xf0 & Dbyte << 4);   //低四位(先执行<<)
  79   1               LCD_CS = 0;
  80   1      }
  81          /*
  82          *********************************************************************************************************
  83          ** 函数名称 ：Dis_string()
  84          ** 函数功能 ：显示字符串 (按指定位置)
  85          ** 入口参数 ：行、列、显示的数据指针
  86          ** 出口参数 ：无
  87          powered by tianyalu
  88          *********************************************************************************************************
  89          */
  90          void Dis_string( uint8 row,
  91                           uint8 col,
  92                                           uint8 *puts )
  93          {   
  94   1              uint8 i = 0;
  95   1          Wricom(0x30);      // 8BitMCU,基本指令集合
  96   1          Wricom(AC_TABLE[8 * row + col]);      // 起始位置
  97   1          while (*puts != '\0')      // 判断字符串是否显示完毕
  98   1          {
  99   2              if (col == 8)            // 判断换行
 100   2              {      // 若不判断,则自动从第一行到第三行
 101   3                  col = 0;
 102   3                  row++;
 103   3              }
 104   2              if (row == 4)
 105   2                      {
 106   3                          row = 0;      // 一屏显示完,回到屏左上角
 107   3                   }
 108   2              Wricom(AC_TABLE[8 * row + col]);
 109   2              Wridat(*puts);      // 一个汉字要写两次
 110   2              puts++;
 111   2              Wridat(*puts);
 112   2              puts++;
 113   2              col++;
 114   2                      i++;
 115   2           }
 116   1      }
C51 COMPILER V9.00   LCD_12864                                                             09/06/2015 20:47:10 PAGE 3   

 117          /*
 118          *********************************************************************************************************
 119          ** 函数名称 ：Dis_string1()
 120          ** 函数功能 ：显示字符串(按整页显示) 
 121          ** 入口参数 ：行、列、显示的数据指针
 122          ** 出口参数 ：无
 123          powered by tianyalu
 124          *********************************************************************************************************
 125          */
 126          void Dis_string1( uint8 row,
 127                           uint8 col,
 128                                           uint8 *puts )
 129          {   
 130   1          uint8 i = 0;
 131   1          Wricom(0x30);      // 8BitMCU,基本指令集合
 132   1          Wricom(AC_TABLE[8 * row + col]);      // 起始位置
 133   1          while (i != 32)      // 判断字符串是否显示完毕
 134   1          {
 135   2             if (col == 8)            // 判断换行
 136   2             {      // 若不判断,则自动从第一行到第三行
 137   3                col = 0;
 138   3                row++;
 139   3             }
 140   2             if (row == 4)
 141   2                 { 
 142   3                     row = 0;      // 一屏显示完,回到屏左上角
 143   3                  }
 144   2             Wricom(AC_TABLE[8 * row + col]);
 145   2             Wridat(*puts);      // 一个汉字要写两次
 146   2             puts++;
 147   2             Wridat(*puts);
 148   2             puts++;
 149   2             col++;
 150   2                 i++;
 151   2          }
 152   1      }
 153          /*
 154          *********************************************************************************************************
 155          ** 函数名称 ：Dis_bmp()
 156          ** 函数功能 ：显示图像 
 157          ** 入口参数 ：显示的数据指针
 158          ** 出口参数 ：无
 159          powered by tianyalu
 160          *********************************************************************************************************
 161          */
 162          void Dis_bmp(uint8 *puts)
 163          {
 164   1          unsigned int x = 0;
 165   1          uint8 i, j;
 166   1          Wricom(0x34);      // 8Bit扩充指令集,即使是36H也要写两次
 167   1          Wricom(0x36);      // 绘图ON,基本指令集里面36H不能开绘图
 168   1          for (i=0; i<32; i++)            //12864实际为256x32
 169   1          {
 170   2             Wricom(0x80|i);      // 行位置
 171   2             Wricom(0x80);      // 列位置
 172   2             for(j=0; j<32; j++)      // 256/8=32 byte
 173   2             {            // 列位置每行自动增加
 174   3                Wridat(puts[x]);
 175   3                x++;
 176   3             }
 177   2          }
 178   1      }
C51 COMPILER V9.00   LCD_12864                                                             09/06/2015 20:47:10 PAGE 4   

 179          /*
 180          *********************************************************************************************************
 181          ** 函数名称 ：Lcd_Init()
 182          ** 函数功能 ：12864初始化 
 183          ** 入口参数 ：无
 184          ** 出口参数 ：无
 185          *********************************************************************************************************
 186          */
 187          void Lcd_Init(void)
 188          {
 189   1         Wricom(0x30);// 基本指令
 190   1         Wricom(0x03);// AC归0,不改变DDRAM内容
 191   1         Wricom(0x0c);// 开显示,关光标,不闪烁
 192   1         Wricom(0x01);// 清屏
 193   1         Wricom(0x06);// 指定在资料写入或读取时，光标的移动方向
 194   1      
 195   1         Dis_string(0,0,"每个创客都应该拥有一台机器人www.wifi-robots.com小R科技欢迎您");
 196   1      }
 197          /*
 198          *********************************************************************************************************
 199          ** 函数名称 ：Clear_txt()
 200          ** 函数功能 ：清文本文字(写ASCII码) 
 201          ** 入口参数 ：无
 202          ** 出口参数 ：无
 203          powered by tianyalu
 204          *********************************************************************************************************
 205          */
 206          void Clear_txt( void )
 207          {
 208   1          uint8 i;
 209   1          Wricom(0x30);
 210   1          Wricom(0x80);      
 211   1          for(i=0; i<64; i++)
 212   1              {
 213   2             Wridat(0x20);// 填空格(空格对应ASCII码为0x20)
 214   2              }
 215   1      }
 216           /*
 217          *********************************************************************************************************
 218          ** 函数名称 ：Clear_bmp()
 219          ** 函数功能 ： 清图像（对应位写0、1）
 220          ** 入口参数 ：无
 221          ** 出口参数 ：无
 222          powered by tianyalu
 223          *********************************************************************************************************
 224          */
 225          void Clear_bmp( void )
 226          {
 227   1         uint8 i, j;
 228   1         Wricom(0x34);      // 8Bit扩充指令集,即使是36H也要写两次
 229   1         Wricom(0x36);      // 绘图ON,基本指令集里面36H不能开绘图
 230   1         for(i=0; i<32; i++)            // 12864实际为256x32
 231   1         {
 232   2            Wricom(0x80|i);      // 行位置
 233   2            Wricom(0x80);      // 列位置
 234   2            for(j=0; j<32; j++)
 235   2                {           //256/8=32 byte
 236   3               Wridat(0);// 写0(1为显示位，0为非显示位)
 237   3                }
 238   2         }
 239   1      }

C51 COMPILER V9.00   LCD_12864                                                             09/06/2015 20:47:10 PAGE 5   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    551    ----
   CONSTANT SIZE    =     93    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
